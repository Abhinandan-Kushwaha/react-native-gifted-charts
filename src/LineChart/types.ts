import {ColorValue} from 'react-native';

export type LineChartPropsType = {
    height?: number;
    overflowTop?: number;
    noOfSections?: number;
    maxValue?: number;
    minValue?: number;
    stepHeight?: number;
    stepValue?: number;
    spacing?: number;
    initialSpacing?: number;
    endSpacing?: number;
    data?: Array<itemType>;
    data2?: Array<itemType>;
    data3?: Array<itemType>;
    data4?: Array<itemType>;
    data5?: Array<itemType>;
    zIndex1?: number;
    zIndex2?: number;
    zIndex3?: number;
    zIndex4?: number;
    zIndex5?: number;
    thickness?: number;
    thickness1?: number;
    thickness2?: number;
    thickness3?: number;
    thickness4?: number;
    thickness5?: number;
    strokeDashArray?: Array<number>;
    strokeDashArray1?: Array<number>;
    strokeDashArray2?: Array<number>;
    strokeDashArray3?: Array<number>;
    strokeDashArray4?: Array<number>;
    strokeDashArray5?: Array<number>;
    rotateLabel?: Boolean;
    isAnimated?: Boolean;
    animateOnDataChange?: Boolean;
    animationDuration?: number;
    onDataChangeAnimationDuration?: number;
    animationEasing?: any;
    animateTogether?: boolean;
    xAxisLength?: number;
    xAxisThickness?: number;
    xAxisColor?: ColorValue;
    xAxisType?: String;
    hideRules?: Boolean;
    rulesLength?: number;
    rulesColor?: ColorValue;
    rulesThickness?: number;
    focusEnabled?: Boolean;
    onFocus?: Function;
    showDataPointOnFocus?: Boolean;
    showStripOnFocus?: Boolean;
    showTextOnFocus?: Boolean;
    stripHeight?: number;
    stripWidth?: number;
    stripColor?: ColorValue | String | any;
    stripOpacity?: number;
    onPress?: Function;
    unFocusOnPressOut?: Boolean;
    delayBeforeUnFocus?: number;
  
    rulesType?: String;
    dashWidth?: number;
    dashGap?: number;
    showReferenceLine1?: Boolean;
    referenceLine1Config?: referenceConfigType;
    referenceLine1Position?: number;
    showReferenceLine2?: Boolean;
    referenceLine2Config?: referenceConfigType;
    referenceLine2Position?: number;
    showReferenceLine3?: Boolean;
    referenceLine3Config?: referenceConfigType;
    referenceLine3Position?: number;
  
    showVerticalLines?: Boolean;
    verticalLinesUptoDataPoint?: Boolean;
    verticalLinesThickness?: number;
    verticalLinesHeight?: number;
    verticalLinesColor?: ColorValue;
    verticalLinesZIndex?: number;
    noOfVerticalLines?: number;
    verticalLinesSpacing?: number;
    hideAxesAndRules?: Boolean;
    areaChart?: Boolean;
  
    disableScroll?: Boolean;
    pointerConfig?: Pointer;
    showScrollIndicator?: boolean;
    indicatorColor?: 'black' | 'default' | 'white';
  
    //Indices
  
    showYAxisIndices?: Boolean;
    showXAxisIndices?: Boolean;
    yAxisIndicesHeight?: number;
    xAxisIndicesHeight?: number;
    yAxisIndicesWidth?: number;
    xAxisIndicesWidth?: number;
    xAxisIndicesColor?: ColorValue;
    yAxisIndicesColor?: ColorValue;
    yAxisSide?: string;
    yAxisOffset?: number;
  
    startIndex?: number;
    startIndex1?: number;
    startIndex2?: number;
    startIndex3?: number;
    startIndex4?: number;
    startIndex5?: number;
    endIndex?: number;
    endIndex1?: number;
    endIndex2?: number;
    endIndex3?: number;
    endIndex4?: number;
    endIndex5?: number;
  
    color?: string;
    color1?: string;
    color2?: string;
    color3?: string;
    color4?: string;
    color5?: string;
    yAxisThickness?: number;
    yAxisColor?: ColorValue;
    yAxisLabelContainerStyle?: any;
    horizontalRulesStyle?: any;
    yAxisTextStyle?: any;
    yAxisTextNumberOfLines?: number;
    xAxisTextNumberOfLines?: number;
    showFractionalValues?: Boolean;
    roundToDigits?: number;
    yAxisLabelWidth?: number;
    hideYAxisText?: Boolean;
  
    backgroundColor?: ColorValue;
    curved?: Boolean;
    horizSections?: Array<sectionType>;
  
    //Data points
  
    hideDataPoints?: Boolean;
    dataPointsHeight?: number;
    dataPointsWidth?: number;
    dataPointsRadius?: number;
    dataPointsColor?: string;
    dataPointsShape?: string;
    hideDataPoints1?: Boolean;
    dataPointsHeight1?: number;
    dataPointsWidth1?: number;
    dataPointsRadius1?: number;
    dataPointsColor1?: string;
    dataPointsShape1?: string;
    hideDataPoints2?: Boolean;
    dataPointsHeight2?: number;
    dataPointsWidth2?: number;
    dataPointsRadius2?: number;
    dataPointsColor2?: string;
    dataPointsShape2?: string;
    hideDataPoints3?: Boolean;
    dataPointsHeight3?: number;
    dataPointsWidth3?: number;
    dataPointsRadius3?: number;
    dataPointsColor3?: string;
    dataPointsShape3?: string;
    hideDataPoints4?: Boolean;
    dataPointsHeight4?: number;
    dataPointsWidth4?: number;
    dataPointsRadius4?: number;
    dataPointsColor4?: string;
    dataPointsShape4?: string;
    hideDataPoints5?: Boolean;
    dataPointsHeight5?: number;
    dataPointsWidth5?: number;
    dataPointsRadius5?: number;
    dataPointsColor5?: string;
    dataPointsShape5?: string;
    customDataPoint?: Function;
  
    focusedDataPointShape?: String;
    focusedDataPointWidth?: number;
    focusedDataPointHeight?: number;
    focusedDataPointColor?: ColorValue | String | any;
    focusedDataPointRadius?: number;
    focusedCustomDataPoint?: Function;
    dataPointLabelWidth?: number;
    dataPointLabelShiftX?: number;
    dataPointLabelShiftY?: number;
  
    startFillColor?: string;
    endFillColor?: string;
    startOpacity?: number;
    endOpacity?: number;
    startFillColor1?: string;
    endFillColor1?: string;
    startOpacity1?: number;
    endOpacity1?: number;
    startFillColor2?: string;
    endFillColor2?: string;
    startOpacity2?: number;
    endOpacity2?: number;
    startFillColor3?: string;
    endFillColor3?: string;
    startOpacity3?: number;
    endOpacity3?: number;
    startFillColor4?: string;
    endFillColor4?: string;
    startOpacity4?: number;
    endOpacity4?: number;
    startFillColor5?: string;
    endFillColor5?: string;
    startOpacity5?: number;
    endOpacity5?: number;
    gradientDirection?: string;
  
    textFontSize?: number;
    textColor?: string;
    textFontSize1?: number;
    textColor1?: string;
    textFontSize2?: number;
    textColor2?: string;
    textFontSize3?: number;
    textColor3?: string;
    textFontSize4?: number;
    textColor4?: string;
    textFontSize5?: number;
    textColor5?: string;
    hideOrigin?: Boolean;
    textShiftX?: number;
    textShiftY?: number;
    yAxisLabelTexts?: Array<string>;
    xAxisLabelTexts?: Array<string>;
    xAxisLabelTextStyle?: any;
    width?: number;
    yAxisLabelPrefix?: String;
    yAxisLabelSuffix?: String;
    scrollToEnd?: Boolean;
    scrollAnimation?: Boolean;
    noOfSectionsBelowXAxis?: number;
    labelsExtraHeight?: number;
    adjustToWidth?: Boolean;
    getPointerProps?: Function;
    showArrows?: boolean;
    arrowConfig?: arrowType;
    showArrow1?: boolean;
    arrowConfig1?: arrowType;
    showArrow2?: boolean;
    arrowConfig2?: arrowType;
    showArrow3?: boolean;
    arrowConfig3?: arrowType;
    showArrow4?: boolean;
    arrowConfig4?: arrowType;
    showArrow5?: boolean;
    arrowConfig5?: arrowType;
  };
  type arrowType = {
    length?: number;
    width?: number;
    strokeWidth?: number;
    strokeColor?: string;
    fillColor?: string;
    showArrowBase?: boolean;
  };
  type referenceConfigType = {
    thickness: number;
    width: number;
    color: ColorValue | String | any;
    type: String;
    dashWidth: number;
    dashGap: number;
    labelText: String;
    labelTextStyle: any;
  };
  export type itemType = {
    value: number;
    label?: String;
    labelComponent?: Function;
    labelTextStyle?: any;
    dataPointText?: string;
    textShiftX?: number;
    textShiftY?: number;
    textColor?: string;
    textFontSize?: number;
  
    hideDataPoint?: Boolean;
    dataPointHeight?: number;
    dataPointWidth?: number;
    dataPointRadius?: number;
    dataPointColor?: string;
    dataPointShape?: string;
    customDataPoint?: Function;
  
    stripHeight?: number;
    stripWidth?: number;
    stripColor?: ColorValue | String | any;
    stripOpacity?: number;
  
    focusedDataPointShape?: String;
    focusedDataPointWidth?: number;
    focusedDataPointHeight?: number;
    focusedDataPointColor?: ColorValue | String | any;
    focusedDataPointRadius?: number;
    focusedCustomDataPoint?: Function;
  
    dataPointLabelComponent?: Function;
    focusedDataPointLabelComponent?: Function;
    dataPointLabelWidth?: number;
    dataPointLabelShiftX?: number;
    dataPointLabelShiftY?: number;
    showStrip?: Boolean;
  
    showVerticalLine?: Boolean;
    verticalLineUptoDataPoint?: Boolean;
    verticalLineColor?: string;
    verticalLineThickness?: number;
    pointerShiftX?: number;
    pointerShiftY?: number;
    onPress?: Function;
  };
  
  type sectionType = {
    value: string;
  };
  
  type Pointer = {
    height?: number;
    width?: number;
    radius?: number;
    pointerColor?: ColorValue;
    pointer1Color?: ColorValue;
    pointer2Color?: ColorValue;
    pointer3Color?: ColorValue;
    pointer4Color?: ColorValue;
    pointer5Color?: ColorValue;
    pointerComponent?: Function;
    showPointerStrip?: boolean;
    pointerStripWidth?: number;
    pointerStripHeight?: number;
    pointerStripColor?: ColorValue;
    pointerStripUptoDataPoint?: boolean;
    pointerLabelComponent?: Function;
    stripOverPointer?: boolean;
    autoAdjustPointerLabelPosition?: boolean;
    shiftPointerLabelX?: number;
    shiftPointerLabelY?: number;
    pointerLabelWidth?: number;
    pointerLabelHeight?: number;
    pointerVanishDelay?: number;
    activatePointersOnLongPress?: boolean;
    activatePointersDelay?: number;
    hidePointer1?: boolean;
    hidePointer2?: boolean;
    hidePointer3?: boolean;
    hidePointer4?: boolean;
    hidePointer5?: boolean;
    strokeDashArray?: Array<number>;
  };